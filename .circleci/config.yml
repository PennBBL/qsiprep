version: 2
jobs:

  build:
    environment:
      TZ: "/usr/share/zoneinfo/America/New_York"
      SCRATCH: "/scratch"
    docker:
      - image: docker:18.06.1-ce-git
    working_directory: /tmp/src/qsiprep
    steps:
      - checkout
      - run:
          name: Install parallel gzip and python3
          command: |
            apk add --no-cache pigz python3 tar
      - restore_cache:
          keys:
            - docker-v5-{{ .Branch }}-{{ .Revision }}
            - docker-v5-{{ .Branch }}-
            - docker-v5-master-
            - docker-v5-
          paths:
            - /tmp/cache/docker.tar.gz
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi
      - run:
          name: Build Docker image
          no_output_timeout: 3h
          command: |
            # Get version, update files.
            THISVERSION=$( python3 get_version.py )
            if [[ ${THISVERSION:0:1} == "0" ]] ; then
              echo "WARNING: latest git tag could not be found"
              echo "Please, make sure you fetch all tags from upstream with"
              echo "the command ``git fetch --tags --verbose`` and push"
              echo "them to your fork with ``git push origin --tags``"
            fi
            sed -i -E "s/(__version__ = )'[A-Za-z0-9.-]+'/\1'${CIRCLE_TAG:-$THISVERSION}'/" wrapper/qsiprep_docker.py
            sed -i -E "s/(var version = )'[A-Za-z0-9.-]+'/\1'${CIRCLE_TAG:-$THISVERSION}'/" docs/citing.rst
            sed -i "s/title = {qsiprep}/title = {qsiprep ${CIRCLE_TAG:-$THISVERSION}}/" qsiprep/data/boilerplate.bib
            # Build docker image
            e=1 && for i in {1..5}; do
              docker build \
                --cache-from=pennbbl/qsiprep \
                --rm=false \
                -t pennbbl/qsiprep:latest \
                --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
                --build-arg VCS_REF=`git rev-parse --short HEAD` \
                --build-arg VERSION="${CIRCLE_TAG:-$THISVERSION}" . \
              && e=0 && break || sleep 15
            done && [ "$e" -eq "0" ]

      - run:
          name: Docker save
          no_output_timeout: 40m
          command: |
            mkdir -p /tmp/cache
            docker save ubuntu:xenial-20161213 pennbbl/qsiprep:latest \
            | pigz -3 > /tmp/cache/docker.tar.gz

      - persist_to_workspace:
          root: /tmp
          paths:
            - src/qsiprep

      - save_cache:
         key: docker-v5-{{ .Branch }}-{{ .Revision }}-{{ epoch }}
         paths:
           - /tmp/cache/docker.tar.gz

  get_data:
    machine:
      # Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
      image: ubuntu-1604:201903-01
    working_directory: /home/circleci/data
    steps:
      - restore_cache:
          keys:
            - data-v5-{{ .Revision }}
            - data-v5-
      - run:
          name: Get single scan from downsampled CS-DSI
          command: |
            mkdir -p /tmp/data
            if [[ ! -d /tmp/data/DSCSDSI ]]; then
              wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q \
                -O dscsdsi_single.tar.xz "https://upenn.box.com/shared/static/5t8xuc5mgfcz5rnl77egvc0ced6h8dcx.xz"
              tar xvfJ dscsdsi_single.tar.xz -C /tmp/data/
            else
              echo "Dataset DSCSDSI was cached"
            fi
      - run:
          name: Get BUDS scans from downsampled CS-DSI
          command: |
            if [[ ! -d /tmp/data/DSCSDSI_BUDS ]]; then
              wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q \
                -O dscsdsi_buds.tar.xz "https://upenn.box.com/shared/static/bvhs3sw2swdkdyekpjhnrhvz89x3k87t.xz"
              tar xvfJ dscsdsi_buds.tar.xz -C /tmp/data/
            else
              echo "Dataset DSCSDSI_BUDS was cached"
            fi
      - run:
          name: Get downsampled DTI
          command: |
            if [[ ! -d /tmp/data/DSDTI ]]; then
              wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q \
                -O DSDTI.tar.xz "https://upenn.box.com/shared/static/iefjtvfez0c2oug0g1a9ulozqe5il5xy.xz"
              tar xvfJ DSDTI.tar.xz -C /tmp/data/
              wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q \
                -O /tmp/data/eddy_config.json \
                "https://upenn.box.com/shared/static/93g89mug6cejzn6jtq0v7wkupz86iafh.json"
              chmod a+r /tmp/data/eddy_config.json
            else
              echo "Dataset DSDTI was cached"
            fi
      - run:
          name: Get multisession CS-DSI
          command: |
            if [[ ! -d /tmp/data/twoses ]]; then
              wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q \
                -O twoses.tar.xz "https://upenn.box.com/shared/static/c949fjjhhen3ihgnzhkdw5jympm327pp.xz"
              tar xvfJ twoses.tar.xz -C /tmp/data/
            else
              echo "Dataset twoses was cached"
            fi
      - run:
          name: Store FreeSurfer license file
          command: |
            mkdir -p /tmp/fslicense
            cd /tmp/fslicense
            echo "cHJpbnRmICJtYXR0aGV3LmNpZXNsYWtAcHN5Y2gudWNzYi5lZHVcbjIwNzA2XG4gKkNmZVZkSDVVVDhyWVxuIEZTQllaLlVrZVRJQ3dcbiIgPiBsaWNlbnNlLnR4dAo=" | base64 -d | sh
      - run:
          name: Create Nipype config files
          command: |
            mkdir -p /tmp/DSCSDSI_BUDS /tmp/DSCSDSI /tmp/DSDTI /tmp/twoses
            printf "[execution]\nstop_on_first_crash = true\n" > /tmp/DSCSDSI/nipype.cfg
            echo "poll_sleep_duration = 0.01" >> /tmp/DSCSDSI/nipype.cfg
            echo "hash_method = content" >> /tmp/DSCSDSI/nipype.cfg
            cp /tmp/DSCSDSI/nipype.cfg /tmp/DSCSDSI_BUDS/nipype.cfg
            cp /tmp/DSCSDSI/nipype.cfg /tmp/DSDTI/nipype.cfg
            cp /tmp/DSCSDSI/nipype.cfg /tmp/twoses/nipype.cfg
      - persist_to_workspace:
          root: /tmp
          paths:
            - data
            - fslicense
            - DSCSDSI/nipype.cfg
            - DSCSDSI_BUDS/nipype.cfg
            - DSDTI/nipype.cfg
            - twoses/nipype.cfg
      - save_cache:
         key: data-v5-{{ epoch }}
         paths:
            - /tmp/data

  build_docs:
    docker:
        - image: python:latest
    working_directory: /tmp/src/qsiprep
    environment:
      - FSLOUTPUTTYPE: 'NIFTI'
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?docs\]' )" != "" ]]; then
              echo "Skipping doc building job"
              circleci step halt
            fi
      - run:
          name: Check Python version and upgrade pip
          command: |
            python --version
            pip install --upgrade "pip>=19.1" numpy
      - run:
          name: Install graphviz
          command: |
              apt-get update
              apt-get install -y graphviz
      - run:
          name: Install qsiprep.
          command: python -m pip install ".[doc]"
      - run:
          name: Build documentation
          command: make SPHINXOPTS="-W" -C docs html
      - store_artifacts:
          path: /tmp/src/qsiprep/docs/_build/html

  DSCSDSI:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: /tmp/DSCSDSI
    environment:
      - FS_LICENSE: /tmp/fslicense/license.txt
    steps:
      - checkout:
          path: /home/circleci/src/qsiprep
      - run:
          name: Check whether build should be skipped
          command: |
            cd /home/circleci/src/qsiprep
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?DSCSDSI\]' )" != "" ]]; then
              echo "Skipping DSCSDSI build"
              circleci step halt
            fi
      - attach_workspace:
          at: /tmp
      - restore_cache:
          keys:
            - DSCSDSI-anat-v1-{{ .Branch }}-{{ epoch }}
            - DSCSDSI-anat-v1-{{ .Branch }}
            - DSCSDSI-anat-v1-master
            - DSCSDSI-anat-v1-
      - restore_cache:
          keys:
            - docker-v5-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Setting up test
          command: |
            mkdir -p /tmp/DSCSDSI/derivatives && sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSCSDSI/derivatives && sudo setfacl -m group:$(id -gn):rwx /tmp/DSCSDSI/derivatives
            pip install future numpy==1.16.4
            pip install --upgrade /tmp/src/qsiprep/wrapper/
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              sudo apt update && sudo apt -y install pigz
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi
      - run:
          name: Run anatomical workflow on DSCSDSI
          no_output_timeout: 2h
          command: |
            mkdir -p /tmp/DSCSDSI/work /tmp/DSCSDSI/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSCSDSI/derivatives && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/DSCSDSI/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSCSDSI/work && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/DSCSDSI/work
            qsiprep-docker -i pennbbl/qsiprep:latest \
                -e qsiprep_DEV 1 -u $(id -u) \
                --config $PWD/nipype.cfg -w /tmp/DSCSDSI/work \
                --bids-dir /tmp/data/DSCSDSI --output-dir /tmp/DSCSDSI/derivatives \
                --analysis-level participant \
                --force-spatial-normalization \
                --sloppy --write-graph --mem_mb 4096 \
                --nthreads 2 --anat-only -vv --output-resolution 5
      - save_cache:
         key: DSCSDSI-anat-v1-{{ .Branch }}-{{ epoch }}
         paths:
            - /tmp/DSCSDSI/work
            - /tmp/DSCSDSI/derivatives/qsiprep

      - run:
          name: Run full qsiprep on DSCSDSI
          no_output_timeout: 2h
          command: |
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSCSDSI/derivatives && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/DSCSDSI/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSCSDSI/work && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/DSCSDSI/work
            qsiprep-docker -i pennbbl/qsiprep:latest \
                -e qsiprep_DEV 1 -u $(id -u) \
                --config $PWD/nipype.cfg -w /tmp/DSCSDSI/work \
                --bids-dir /tmp/data/DSCSDSI --output-dir /tmp/DSCSDSI/derivatives \
                --analysis-level participant \
                --sloppy --write-graph --use-syn-sdc --mem_mb 4096 \
                --output-space T1w \
                --hmc_model 3dSHORE \
                --hmc-transform Rigid \
                --shoreline_iters 1 \
                --force-spatial-normalization \
                --output-resolution 5 \
                --nthreads 2 -vv
      # - run:
      #    name: Move intermediate results for second run
      #    command: |
      #      mkdir -p /tmp/DSCSDSI/derivatives_partial
      #      sudo cp -a /tmp/DSCSDSI/work /tmp/DSCSDSI/work_partial


      - store_artifacts:
         path: /tmp/DSCSDSI


  DSDTI:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: /tmp/DSDTI
    environment:
      - FS_LICENSE: /tmp/fslicense/license.txt
    steps:
      - checkout:
          path: /home/circleci/src/qsiprep
      - run:
          name: Check whether build should be skipped
          command: |
            cd /home/circleci/src/qsiprep
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?DSDTI\]' )" != "" ]]; then
              echo "Skipping DSDTI build"
              circleci step halt
            fi
      - attach_workspace:
          at: /tmp
      - restore_cache:
          keys:
            - DSDTI-anat-v1-{{ .Branch }}-{{ epoch }}
            - DSDTI-anat-v1-{{ .Branch }}
            - DSDTI-anat-v1-master
            - DSDTI-anat-v1-
      - restore_cache:
          keys:
            - docker-v5-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Setting up test
          command: |
            mkdir -p /tmp/DSDTI/derivatives && sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSDTI/derivatives && sudo setfacl -m group:$(id -gn):rwx /tmp/DSDTI/derivatives
            pip install future numpy==1.16.4
            pip install --upgrade /tmp/src/qsiprep/wrapper/
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              sudo apt update && sudo apt -y install pigz
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi
      - run:
          name: Run anatomical workflow on DSDTI
          no_output_timeout: 2h
          command: |
            mkdir -p /tmp/DSDTI/work /tmp/DSDTI/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSDTI/derivatives && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/DSDTI/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSDTI/work && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/DSDTI/work
            qsiprep-docker -i pennbbl/qsiprep:latest \
                -e qsiprep_DEV 1 -u $(id -u) \
                --config $PWD/nipype.cfg -w /tmp/DSDTI/work \
                --bids-dir /tmp/data/DSDTI --output-dir /tmp/DSDTI/derivatives \
                --analysis-level participant \
                --sloppy --write-graph --mem_mb 4096 \
                --nthreads 2 --anat-only -vv --output-resolution 5
      - save_cache:
         key: DSDTI-anat-v1-{{ .Branch }}-{{ epoch }}
         paths:
            # - /tmp/DSDTI/work
            - /tmp/DSDTI/derivatives/qsiprep

      - run:
          name: Run full qsiprep (eddy) on DSDTI
          no_output_timeout: 2h
          command: |
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSDTI/derivatives && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/DSDTI/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/DSDTI/work && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/DSDTI/work && \
            sudo chmod a+rw /tmp/data/eddy_config.json
            qsiprep-docker -i pennbbl/qsiprep:latest \
                -e qsiprep_DEV 1 -u $(id -u) \
                --config $PWD/nipype.cfg -w /tmp/DSDTI/work \
                --bids-dir /tmp/data/DSDTI --output-dir /tmp/DSDTI/derivatives \
                --analysis-level participant \
                --sloppy --mem_mb 4096 \
                --output-space T1w \
                --hmc_model eddy \
                --eddy_config /tmp/data/eddy_config.json \
                --output-resolution 5 \
                --nthreads 2 -vv
      # - run:
      #     name: Move intermediate results for second run
      #     command: |
      #       mkdir -p /tmp/DSDTI/derivatives_partial
      #       sudo cp -a /tmp/DSDTI/work /tmp/DSDTI/work_partial


      - store_artifacts:
          path: /tmp/DSDTI

  IntramodalTemplate:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: /tmp/twoses
    environment:
      - FS_LICENSE: /tmp/fslicense/license.txt
    steps:
      - checkout:
          path: /home/circleci/src/qsiprep
      - run:
          name: Check whether build should be skipped
          command: |
            cd /home/circleci/src/qsiprep
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?IntramodalTemplate\]' )" != "" ]]; then
              echo "Skipping IntramodalTemplate build"
              circleci step halt
            fi
      - attach_workspace:
          at: /tmp
      - restore_cache:
          keys:
            - docker-v5-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Setting up test
          command: |
            mkdir -p /tmp/twoses/derivatives && sudo setfacl -d -m group:$(id -gn):rwx /tmp/twoses/derivatives && sudo setfacl -m group:$(id -gn):rwx /tmp/twoses/derivatives
            pip install future numpy==1.16.4
            pip install --upgrade /tmp/src/qsiprep/wrapper/
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              sudo apt update && sudo apt -y install pigz
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi

      - run:
          name: Run full qsiprep with an intramodal template
          no_output_timeout: 2h
          command: |
            mkdir -p /tmp/twoses/work /tmp/twoses/derivatives && \
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/twoses/derivatives && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/twoses/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/twoses/work && \
                sudo setfacl -m group:$(id -gn):rwx /tmp/twoses/work && \
            qsiprep-docker -i pennbbl/qsiprep:latest \
                -e qsiprep_DEV 1 -u $(id -u) \
                --config $PWD/nipype.cfg -w /tmp/twoses/work \
                --bids-dir /tmp/data/twoses --output-dir /tmp/twoses/derivatives \
                --analysis-level participant \
                --sloppy --mem_mb 4096 \
                --output-space T1w \
                --hmc_model none \
                --b0-motion-corr-to first \
                --output-resolution 5 \
                --intramodal-template-transform BSplineSyN \
                --intramodal-template-iters 2 \
                --nthreads 2 -vv
      # - run:
      #     name: Move intermediate results for second run
      #     command: |
      #       mkdir -p /tmp/DSDTI/derivatives_partial
      #       sudo cp -a /tmp/DSDTI/work /tmp/DSDTI/work_partial

      - store_artifacts:
          path: /tmp/twoses

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - get_data:
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - build_docs:
          filters:
            branches:
              ignore:
                - /tests?\/.*/
                - /ds005\/.*/
                - /ds054\/.*/
                - /ds210\/.*/
                - /docker\/.*/
            tags:
              only: /.*/

      - DSCSDSI:
          requires:
            - get_data
            - build
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - DSDTI:
          requires:
            - get_data
            - build
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - IntramodalTemplate:
          requires:
            - get_data
            - build
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/
